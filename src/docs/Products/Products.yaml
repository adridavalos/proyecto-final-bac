openapi: 3.0.0
info:
  title: Product API
  description: API for managing products
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
paths:
  /products:
    get:
      summary: Get all products
      parameters:
        - name: limit
          in: query
          description: Limit the number of products returned
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
        - name: query
          in: query
          description: Filter query for products
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorting criteria for products
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
    post:
      summary: Add a new product
      security:
        - adminAuth: []
        - premiumAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  message:
                    type: string
                  product:
                    $ref: '#/components/schemas/Product'
        '500':
          description: Error adding product
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  message:
                    type: string
                  error:
                    type: string
  /products/{pid}:
    parameters:
      - name: pid
        in: path
        required: true
        schema:
          type: string
        description: Product ID
    get:
      summary: Get a product by ID
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  payload:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  payload:
                    type: string
    put:
      summary: Update a product by ID
      security:
        - adminAuth: []
        - premiumAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  payload:
                    type: string
        '400':
          description: Error updating product
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  payload:
                    type: string
    delete:
      summary: Delete a product by ID
      security:
        - adminAuth: []
        - premiumAuth: []
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  message:
                    type: string
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  message:
                    type: string
        '403':
          description: Permission denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  message:
                    type: string
        '500':
          description: Error deleting product
          content:
            application/json:
              schema:
                type: object
                properties:
                  origin:
                    type: string
                  message:
                    type: string
components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        thumbnail:
          type: string
        code:
          type: string
        stock:
          type: integer
        owner:
          type: string
securitySchemes:
  adminAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
  premiumAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
